# 注册登陆

from . import api
from malware import db
from malware.models import User
from flask import request, jsonify, current_app, session
from sqlalchemy.exc import IntegrityError
from werkzeug.security import generate_password_hash, check_password_hash


@api.route('/user/register', methods=["POST"])
def register():
    username = request.form.get("username")
    password = request.form.get("password")
    user = User(username=username)
    user.pwd = password
    try:
        db.session.add(user)
        db.session.commit()
    except IntegrityError as e:
        db.session.rollback()
        current_app.logger.error(e)
        return "异常"
    except Exception as e:
        db.session.rollback()
        current_app.logger.error(e)
        return "异常"

    # 保存登陆状态到session
    session["username"] = username
    res = {
        "code": 1,
        "data": username
    }
    return jsonify(res)


@api.route('/user/login', methods=["POST"])
def login():
    username = request.form.get("username")
    password = request.form.get("password")

    user = User.query.filter_by(username=username).first()

    if user is None or not user.check_password(password):
        return jsonify({"code": 0, "data": "用户名或密码错误"})
    session["username"] = username
    return jsonify({"code": 1, "data": username})


@api.route('/user/session', methods=["GET"])
def check_login():
    """检查登陆状态"""
    username = session.get("username")
    if username is not None:
        return jsonify({"code": 1, "data": username})
    else:
        return jsonify({"code": 0})


@api.route('/user/logout', methods=["GET"])
def logout():
    """退出"""
    session.clear()
    return jsonify({"code": 1, "data": "退出成功"})
