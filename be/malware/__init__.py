from flask import Flask
from flask_session import Session
from flask_wtf import CSRFProtect
from config import config_map
from flask_sqlalchemy import SQLAlchemy
import redis
import logging
from logging.handlers import RotatingFileHandler

# 数据库
db = SQLAlchemy()
# 创建链接对象
redis_store = None


logging.basicConfig(level=logging.DEBUG)  # 级别
# 日志记录器
file_log_handler = RotatingFileHandler(
    "logs/log", maxBytes=1024*1024*100, backupCount=10)
# 记录的格式
formatter = logging.Formatter(
    '%(levelname)s %(filename)s:%(lineno)d %(message)s')
file_log_handler.setFormatter(formatter)
# 为全局的日志工具对象添加记录器
logging.getLogger().addHandler(file_log_handler)


def create_app(config_name):
    app = Flask(__name__)
    config_class = config_map.get(config_name)
    app.config.from_object(config_class)
    db.init_app(app)  # 使用 app 初始化 db

    # 初始化 redis
    global redis_store
    redis_store = redis.StrictRedis(
        host=config_class.REDIS_HOST, port=config_class.REDIS_PORT)

    # 用flask_session将session保存到 redis 中
    Session(app)

    # 为 flask 补充 CSRF保护
    CSRFProtect(app)

    # 注册蓝图
    from malware import api_1_0  # 不要放在最上面，会有循环导入的问题
    app.register_blueprint(api_1_0.api, url_prefix="/api")
    return app
